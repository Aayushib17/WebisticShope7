{"ast":null,"code":"import _toConsumableArray from \"C:/Users/HP/OneDrive/Desktop/Fitpeo/fitpeo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport * as React from 'react';\nimport { InteractionContext } from '../context/InteractionProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { SVGContext, DrawingContext } from '../context/DrawingProvider';\nimport { isBandScale } from '../internals/isBandScale';\nexport var useAxisEvents = function useAxisEvents(disableAxisListener) {\n  var svgRef = React.useContext(SVGContext);\n  var _React$useContext = React.useContext(DrawingContext),\n    width = _React$useContext.width,\n    height = _React$useContext.height,\n    top = _React$useContext.top,\n    left = _React$useContext.left;\n  var _React$useContext2 = React.useContext(CartesianContext),\n    xAxis = _React$useContext2.xAxis,\n    yAxis = _React$useContext2.yAxis,\n    xAxisIds = _React$useContext2.xAxisIds,\n    yAxisIds = _React$useContext2.yAxisIds;\n  var _React$useContext3 = React.useContext(InteractionContext),\n    dispatch = _React$useContext3.dispatch;\n  var usedXAxis = xAxisIds[0];\n  var usedYAxis = yAxisIds[0];\n\n  // Use a ref to avoid rerendering on every mousemove event.\n  var mousePosition = React.useRef({\n    x: -1,\n    y: -1\n  });\n  React.useEffect(function () {\n    var element = svgRef.current;\n    if (element === null || disableAxisListener) {\n      return function () {};\n    }\n    var getUpdate = function getUpdate(axisConfig, mouseValue) {\n      if (usedXAxis === null) {\n        return null;\n      }\n      var scale = axisConfig.scale,\n        axisData = axisConfig.data;\n      if (!isBandScale(scale)) {\n        var value = scale.invert(mouseValue);\n        if (axisData === undefined) {\n          return {\n            value: value\n          };\n        }\n        var closestIndex = axisData == null ? void 0 : axisData.findIndex(function (v, index) {\n          if (v > value) {\n            // @ts-ignore\n            if (index === 0 || Math.abs(value - v) <= Math.abs(value - axisData[index - 1])) {\n              return true;\n            }\n          }\n          if (v <= value) {\n            if (index === axisData.length - 1 ||\n            // @ts-ignore\n            Math.abs(value - v) < Math.abs(value - axisData[index + 1])) {\n              return true;\n            }\n          }\n          return false;\n        });\n        return {\n          value: closestIndex !== undefined && closestIndex >= 0 ? axisData[closestIndex] : value,\n          index: closestIndex\n        };\n      }\n      var dataIndex = scale.bandwidth() === 0 ? Math.floor((mouseValue - Math.min.apply(Math, _toConsumableArray(scale.range())) + scale.step() / 2) / scale.step()) : Math.floor((mouseValue - Math.min.apply(Math, _toConsumableArray(scale.range()))) / scale.step());\n      if (dataIndex < 0 || dataIndex >= axisData.length) {\n        return null;\n      }\n      return {\n        index: dataIndex,\n        value: axisData[dataIndex]\n      };\n    };\n    var handleMouseOut = function handleMouseOut() {\n      mousePosition.current = {\n        x: -1,\n        y: -1\n      };\n      dispatch({\n        type: 'updateAxis',\n        data: {\n          x: null,\n          y: null\n        }\n      });\n    };\n    var handleMouseMove = function handleMouseMove(event) {\n      // Get mouse coordinate in global SVG space\n      var pt = svgRef.current.createSVGPoint();\n      pt.x = event.clientX;\n      pt.y = event.clientY;\n      var svgPt = pt.matrixTransform(svgRef.current.getScreenCTM().inverse());\n      mousePosition.current = {\n        x: svgPt.x,\n        y: svgPt.y\n      };\n      var outsideX = svgPt.x < left || svgPt.x > left + width;\n      var outsideY = svgPt.y < top || svgPt.y > top + height;\n      if (outsideX || outsideY) {\n        dispatch({\n          type: 'updateAxis',\n          data: {\n            x: null,\n            y: null\n          }\n        });\n        return;\n      }\n      var newStateX = getUpdate(xAxis[usedXAxis], svgPt.x);\n      var newStateY = getUpdate(yAxis[usedYAxis], svgPt.y);\n      dispatch({\n        type: 'updateAxis',\n        data: {\n          x: newStateX,\n          y: newStateY\n        }\n      });\n    };\n    element.addEventListener('mouseout', handleMouseOut);\n    element.addEventListener('mousemove', handleMouseMove);\n    return function () {\n      element.removeEventListener('mouseout', handleMouseOut);\n      element.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [svgRef, dispatch, left, width, top, height, usedYAxis, yAxis, usedXAxis, xAxis, disableAxisListener]);\n};","map":{"version":3,"names":["React","InteractionContext","CartesianContext","SVGContext","DrawingContext","isBandScale","useAxisEvents","disableAxisListener","svgRef","useContext","_React$useContext","width","height","top","left","_React$useContext2","xAxis","yAxis","xAxisIds","yAxisIds","_React$useContext3","dispatch","usedXAxis","usedYAxis","mousePosition","useRef","x","y","useEffect","element","current","getUpdate","axisConfig","mouseValue","scale","axisData","data","value","invert","undefined","closestIndex","findIndex","v","index","Math","abs","length","dataIndex","bandwidth","floor","min","apply","_toConsumableArray","range","step","handleMouseOut","type","handleMouseMove","event","pt","createSVGPoint","clientX","clientY","svgPt","matrixTransform","getScreenCTM","inverse","outsideX","outsideY","newStateX","newStateY","addEventListener","removeEventListener"],"sources":["C:/Users/HP/OneDrive/Desktop/Fitpeo/fitpeo/node_modules/@mui/x-charts/esm/hooks/useAxisEvents.js"],"sourcesContent":["import * as React from 'react';\nimport { InteractionContext } from '../context/InteractionProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { SVGContext, DrawingContext } from '../context/DrawingProvider';\nimport { isBandScale } from '../internals/isBandScale';\nexport const useAxisEvents = disableAxisListener => {\n  const svgRef = React.useContext(SVGContext);\n  const {\n    width,\n    height,\n    top,\n    left\n  } = React.useContext(DrawingContext);\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = React.useContext(CartesianContext);\n  const {\n    dispatch\n  } = React.useContext(InteractionContext);\n  const usedXAxis = xAxisIds[0];\n  const usedYAxis = yAxisIds[0];\n\n  // Use a ref to avoid rerendering on every mousemove event.\n  const mousePosition = React.useRef({\n    x: -1,\n    y: -1\n  });\n  React.useEffect(() => {\n    const element = svgRef.current;\n    if (element === null || disableAxisListener) {\n      return () => {};\n    }\n    const getUpdate = (axisConfig, mouseValue) => {\n      if (usedXAxis === null) {\n        return null;\n      }\n      const {\n        scale,\n        data: axisData\n      } = axisConfig;\n      if (!isBandScale(scale)) {\n        const value = scale.invert(mouseValue);\n        if (axisData === undefined) {\n          return {\n            value\n          };\n        }\n        const closestIndex = axisData == null ? void 0 : axisData.findIndex((v, index) => {\n          if (v > value) {\n            // @ts-ignore\n            if (index === 0 || Math.abs(value - v) <= Math.abs(value - axisData[index - 1])) {\n              return true;\n            }\n          }\n          if (v <= value) {\n            if (index === axisData.length - 1 ||\n            // @ts-ignore\n            Math.abs(value - v) < Math.abs(value - axisData[index + 1])) {\n              return true;\n            }\n          }\n          return false;\n        });\n        return {\n          value: closestIndex !== undefined && closestIndex >= 0 ? axisData[closestIndex] : value,\n          index: closestIndex\n        };\n      }\n      const dataIndex = scale.bandwidth() === 0 ? Math.floor((mouseValue - Math.min(...scale.range()) + scale.step() / 2) / scale.step()) : Math.floor((mouseValue - Math.min(...scale.range())) / scale.step());\n      if (dataIndex < 0 || dataIndex >= axisData.length) {\n        return null;\n      }\n      return {\n        index: dataIndex,\n        value: axisData[dataIndex]\n      };\n    };\n    const handleMouseOut = () => {\n      mousePosition.current = {\n        x: -1,\n        y: -1\n      };\n      dispatch({\n        type: 'updateAxis',\n        data: {\n          x: null,\n          y: null\n        }\n      });\n    };\n    const handleMouseMove = event => {\n      // Get mouse coordinate in global SVG space\n      const pt = svgRef.current.createSVGPoint();\n      pt.x = event.clientX;\n      pt.y = event.clientY;\n      const svgPt = pt.matrixTransform(svgRef.current.getScreenCTM().inverse());\n      mousePosition.current = {\n        x: svgPt.x,\n        y: svgPt.y\n      };\n      const outsideX = svgPt.x < left || svgPt.x > left + width;\n      const outsideY = svgPt.y < top || svgPt.y > top + height;\n      if (outsideX || outsideY) {\n        dispatch({\n          type: 'updateAxis',\n          data: {\n            x: null,\n            y: null\n          }\n        });\n        return;\n      }\n      const newStateX = getUpdate(xAxis[usedXAxis], svgPt.x);\n      const newStateY = getUpdate(yAxis[usedYAxis], svgPt.y);\n      dispatch({\n        type: 'updateAxis',\n        data: {\n          x: newStateX,\n          y: newStateY\n        }\n      });\n    };\n    element.addEventListener('mouseout', handleMouseOut);\n    element.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      element.removeEventListener('mouseout', handleMouseOut);\n      element.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [svgRef, dispatch, left, width, top, height, usedYAxis, yAxis, usedXAxis, xAxis, disableAxisListener]);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}